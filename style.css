/*
 * Thomas Hansknecht
 * tfh0007
 */


/* The *{ seems to affect the entire webpage style */
	*{
		/* The box-sizing property defines how the width and height of an 
		 * element are calculated: should they include padding and borders, or not. 
		 * Border-box tells that the width and height properties (and min/max properties) 
		 * includes content, padding and border */

		box-sizing: border-box;
		margin: 0;
		padding: 0;

	}

	/* Change the default setting for our menu object */
		.navbar {
			background: #E87722;
			height:100px;
		/* flex forces items to the same length, regardless of content */
			display: flex;
		/* justify-content property aligns the flexible container's items when 
		 * the items do not use all available space on the main-axis (horizontally). */
			justify-content: center;

		/* Center the alignments for all the items of the flexible <div> element. */	
			align-items: center;

		/* 1 Rem is equivalent to about 16 pixels */
		font-size: 2rem;

		/* The element is positioned based on the user's scroll position */
		position: sticky;

		/* The top property affects the vertical position of a positioned 
		 * element. This property has no effect on non-positioned elements. */
		top: 0;

		/* We want the menu to stay at top of screen regardless of what we are looking at 
		 * The z-index property specifies the stack order of an element.*/
		z-index: 999;		

		}

	/* Change the default settings within the menu object */
		.navbar__menu {
			display: flex;
			z-index: 1;
			width: 100%;
			padding: 0;
			align-items: center;
			list-style: none;
			text-align: center;	
		}

	/* Change the default settings for the menu object links */
		.navbar__links {
			color: #fff;
			display: flex;
			align-items: center;
			justify-content: center;

			/* Gets rid of the underlines on each menu item */
			text-decoration: none;

			/* padding uses top, bottom, right, left. We only want to change right and left */
			padding: 0 3rem;
			/* Note this font only shows if it exists in the browser */
			font-family: 'Algerian','sans-serif';
			height: 100%;
			width: 100%;
			/* make the links more circular instead of square */
			border-radius: 10px;
			

		}
		/* Creates a hover effect when the cursor hovers over a menu item */
		.navbar__links:hover {
			background: #000080;
			transition: all 0.2s ease;

			padding: 10 3rem;

		}

		/* Make a different layout for mobile users with a small screen *
		 * First set a max display size to have the mobile version of the site */
		@media screen and (max-width: 860px) {


			.navbar {

				background: #111;

				height:500px;
				/* flex forces items to the same length, regardless of content */
				display: grid;

				/* 1 Rem is equivalent to about 16 pixels */
				font-size: 4rem;

				/* The element is positioned based on the user's scroll position */
				position: sticky;

				/* The top property affects the vertical position of a positioned 
				 * element. This property has no effect on non-positioned elements. */
				top: 0;

				/* We want the menu to stay at top of screen regardless of what we are looking at 
				 * The z-index property specifies the stack order of an element.*/
				z-index: 999;		

		}
			.navbar__menu {
				background: #111;
				display: flex;
				/* auto overflow means If overflow is clipped, a scroll-bar should be added to see the rest of the content */
				overflow: auto;
				height: 500px;
				z-index: 1;
				width: 100%;
				max-width: 860px;
				padding: 0;
			}
		

		/* Set unique setting for our menu object given we are using mobile version */
			.navbar_links {
				display grid;
				
				
				width: 100%;
				margin-left: -100%;
				padding: 0;
			

				/* vh means view port height */


			}
		}


	/* Change to text color of heading 1 to red */
	h1 {
		color: red;
		margin-bottom;
		font-style: 'Arial','sans-serif';
		font-size: 2.7rem;
	}